import matplotlib.pyplot as plt
import pandas as pd
import numpy as np
data={'Feature_A':np.random.rand(100)*10,'Feature_B':np.random.randn(100)*5+15,'Category':np.random.choice(['Group X','Group Y','Group Z'],100),'Numeric_ID':np.arange(100),'Target_Value':np.random.randint(10,50,100)}
df=pd.DataFrame(data)
print("Sample of the dataset:")
print(df.head())
print("\nDataset Info:")
df.info()
print("\n")
plt.style.use('seaborn-v0_8-darkgrid')
plt.figure(figsize=(8,5))
plt.hist(df['Feature_A'],bins=15,color='skyblue',edgecolor='black')
plt.title('Distribution of Feature A')
plt.xlabel('Feature A Value')
plt.ylabel('Frequency')
plt.grid(axis='y',alpha=0.75)
plt.tight_layout()
plt.show()
plt.figure(figsize=(9,6))
plt.scatter(df['Feature_A'],df['Feature_B'],alpha=0.7,color='coral',s=50)
plt.title('Relationship between Feature A and Feature B')
plt.xlabel('Feature A')
plt.ylabel('Feature B')
plt.grid(True,linestyle='--',alpha=0.6)
plt.tight_layout()
plt.show()
plt.figure(figsize=(10,7))
for category in df['Category'].unique():
    subset=df[df['Category']==category]
    plt.scatter(subset['Feature_A'],subset['Target_Value'],label=category,alpha=0.7,s=70)
plt.title('Feature A vs Target Value colored by Category')
plt.xlabel('Feature A')
plt.ylabel('Target Value')
plt.legend(title='Category')
plt.grid(True,linestyle=':',alpha=0.6)
plt.tight_layout()
plt.show()
plt.figure(figsize=(9,6))
df.boxplot(column='Target_Value',by='Category',grid=False,patch_artist=True,boxprops=dict(facecolor='lightgreen',color='black'),medianprops=dict(color='red',linewidth=2))
plt.title('Target Value Distribution by Category')
plt.suptitle('')
plt.xlabel('Category')
plt.ylabel('Target Value')
plt.tight_layout()
plt.show()
plt.figure(figsize=(7,5))
category_counts=df['Category'].value_counts()
category_counts.plot(kind='bar',color=['navy','darkgreen','purple'],edgecolor='black')
plt.title('Count of Observations per Category')
plt.xlabel('Category')
plt.ylabel('Count')
plt.xticks(rotation=45)
plt.grid(axis='y',alpha=0.75)
plt.tight_layout()
plt.show()
df_sorted=df.sort_values(by='Numeric_ID')
plt.figure(figsize=(10,6))
plt.plot(df_sorted['Numeric_ID'],df_sorted['Feature_B'],marker='o',linestyle='-',color='teal',markersize=5,linewidth=1)
plt.title('Feature B over Numeric ID (Simulating sequence)')
plt.xlabel('Numeric ID')
plt.ylabel('Feature B Value')
plt.grid(True,linestyle='--',alpha=0.6)
plt.tight_layout()
plt.show()
fig,axes=plt.subplots(1,2,figsize=(14,5))
axes[0].hist(df['Target_Value'],bins=10,color='lightsalmon',edgecolor='black')
axes[0].set_title('Distribution of Target Value')
axes[0].set_xlabel('Target Value')
axes[0].set_ylabel('Frequency')
axes[0].grid(axis='y',alpha=0.75)
df['Feature_B'].plot(kind='kde',ax=axes[1],color='darkblue',linewidth=2)
axes[1].set_title('Kernel Density Estimate of Feature B')
axes[1].set_xlabel('Feature B Value')
axes[1].set_ylabel('Density')
axes[1].grid(True,linestyle='--',alpha=0.6)
plt.tight_layout()
plt.show()
print("Visualizations complete. R.O.N.I by RONITH SINGHVI hopes this helps you explore your data!")
